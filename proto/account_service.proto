syntax = "proto3";

package account;

option java_package = "com.rtfsc.account.proto";
option java_multiple_files = true;
option java_outer_classname = "AccountProto";

service AccountService {
  // 用户注册接口
  rpc Register(RegisterRequest) returns (RegisterResponse);

  // 用户登录接口，返回认证Token
  rpc Login(LoginRequest) returns (LoginResponse);

  // Token验证接口
  rpc ValidateToken(TokenValidateRequest) returns (TokenValidateResponse);

  // 设备绑定接口
  rpc BindDevice(BindDeviceRequest) returns (BindDeviceResponse);

  // 设备解绑接口
  rpc UnbindDevice(UnbindDeviceRequest) returns (UnbindDeviceResponse);
}

// 用户注册请求
message RegisterRequest {
  string username = 1;
  string password = 2;   // 需要安全传输（建议TLS）
  string email = 3;
  string phone = 4;
}

// 用户注册响应
message RegisterResponse {
  int32 code = 1;          // 0 成功，非0 失败
  string message = 2;
  string user_id = 3;      // 注册成功后返回的唯一用户ID
}

// 用户登录请求
message LoginRequest {
  string username = 1;
  string password = 2;
}

// 用户登录响应
message LoginResponse {
  int32 code = 1;
  string message = 2;
  string user_id = 3;
  string auth_token = 4;   // 登录成功后返回的Token
  int64 expires_at = 5;    // Token过期时间（Unix时间戳，秒）
}

// Token验证请求
message TokenValidateRequest {
  string user_id = 1;
  string auth_token = 2;
}

// Token验证响应
message TokenValidateResponse {
  int32 code = 1;
  string message = 2;
  bool valid = 3;          // Token是否有效
}

// 设备绑定请求
message BindDeviceRequest {
  string user_id = 1;
  string device_id = 2;
  string auth_token = 3;
}

// 设备绑定响应
message BindDeviceResponse {
  int32 code = 1;
  string message = 2;
}

// 设备解绑请求
message UnbindDeviceRequest {
  string user_id = 1;
  string device_id = 2;
  string auth_token = 3;
}

// 设备解绑响应
message UnbindDeviceResponse {
  int32 code = 1;
  string message = 2;
}
